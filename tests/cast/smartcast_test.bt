// SPDX-FileCopyrightText: 2023-present Lukas Neubert <lukas.neubert@proton.me>
// SPDX-License-Identifier: MPL-2.0

type Sum := Foo | Bar

struct Foo{}
struct Bar{}

fun get_sum_foo() Sum {
	return Foo{}
}

fun test_smartcast_scope() {
	f := get_sum_foo()

	if f is Bar {
		assert false
	} else {
		assert typeof(f) == 'Sum'
	}

	if f is Foo {
		assert typeof(f) == 'Foo'
	} else {
		assert false
	}
}

fun test_infix_scope() {
	f := get_sum_foo()

	assert f is Foo
}

type NumBit8 := i8 | u8

fun test_sumtype_builtins() {
	n := (1 as i8) as NumBit8

	if not (n is i8) {
		assert false
	}
}

fun get_sum() !Sum {
	return Foo{}
}

fun test_result() ! {
	s := get_sum()!
	assert s is Foo
}
